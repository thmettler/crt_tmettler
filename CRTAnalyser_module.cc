////////////////////////////////////////////////////////////////////////
// Class:       CRTAnalyser
// Module Type: analyzer
// File:        CRTAnalyser_module.cc
//
// Generated at Thu Dec  7 06:25:07 2017 by Thomas Mettler using artmod
// from cetpkgsupport v1_13_00.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDAnalyzer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "art/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"

#include "art/Framework/Services/Optional/TFileService.h"

#include "uboone/CRT/CRTProducts/CRTHit.hh"
#include "uboone/CRT/CRTProducts/CRTTrack.hh"
#include "uboone/CRT/CRTAuxFunctions.hh"

#include "TTree.h"

#include "TH1F.h"
#include "TH2F.h"
#include "TH3S.h"
#include "TProfile.h"
#include "TF1.h"
#include "TDatime.h"
#include <iostream>
#include <stdio.h>
#include <sstream>
#include <vector>
#include <map>
#include <utility>
#include <cmath> 
#include <memory>


namespace crt {
  class CRTAnalyser;
}

class crt::CRTAnalyser : public art::EDAnalyzer {
public:
  explicit CRTAnalyser(fhicl::ParameterSet const & p);
  // The destructor generated by the compiler is fine for classes
  // without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  CRTAnalyser(CRTAnalyser const &) = delete;
  CRTAnalyser(CRTAnalyser &&) = delete;
  CRTAnalyser & operator = (CRTAnalyser const &) = delete;
  CRTAnalyser & operator = (CRTAnalyser &&) = delete;

  // Required functions.
  void analyze(art::Event const & e) override;

  // Selected optional functions.
  void beginJob() override;

private:

  endJo;
  // Declare member data here.

};


crt::CRTAnalyser::CRTAnalyser(fhicl::ParameterSet const & p)
  :
  EDAnalyzer(p)  // ,
 // More initializers here.
{}

void crt::CRTAnalyser::analyze(art::Event const & e)
{
  // Implementation of required member function here.
}

void crt::CRTAnalyser::beginJob()
{
  // Implementation of optional member function here.
}

DEFINE_ART_MODULE(crt::CRTAnalyser)
